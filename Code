

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    startService(new Intent(getApplicationContext(), LockService.class));
    TextView ticker;
    ticker = (TextView) findViewById(R.id.textView);
    ticker.setText(String.valueOf(Tick.tick));
    Log.e("but this is awesome ", String.valueOf(Tick.tick));
}



public class LockService extends Service {
@Override
public IBinder onBind(Intent intent) {
    return null;
}

@Override
public void onCreate() {
    super.onCreate();
}

@Override
public int onStartCommand(Intent intent, int flags, int startId) {
    final IntentFilter filter = new IntentFilter(Intent.ACTION_SCREEN_ON);
    filter.addAction(Intent.ACTION_SCREEN_OFF);
    filter.addAction(Intent.ACTION_USER_PRESENT);
    final BroadcastReceiver mReceiver = new ScreenReceiver();
    registerReceiver(mReceiver, filter);
    return super.onStartCommand(intent, flags, startId);
}
public class LocalBinder extends Binder {
    LockService getService() {
        return LockService.this;
    }
}
}


public class ScreenReceiver extends BroadcastReceiver {
public static boolean wasScreenOn = true;


    @Override
    public void onReceive(final Context context, final Intent intent) {
        Log.e("test", "onReceive");
        if (intent.getAction().equals(Intent.ACTION_SCREEN_OFF)) {
            wasScreenOn = false;
            Log.e("test", "wasScreenOn" + wasScreenOn);
        } else if (intent.getAction().equals(Intent.ACTION_SCREEN_ON)) {
            wasScreenOn = true;
            Log.e("test", "wasScreenOn and user present" + wasScreenOn);
        } else if (intent.getAction().equals(Intent.ACTION_USER_PRESENT)) {
            Tick.tick ++;
            Log.e("test", "userpresent" + Tick.tick);
        }
    }

}
